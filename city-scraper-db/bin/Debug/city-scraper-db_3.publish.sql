/*
Deployment script for CityScraperDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "CityScraperDb"
:setvar DefaultFilePrefix "CityScraperDb"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[FK_Game_Team_Home]...';


GO
ALTER TABLE [dbo].[Game] DROP CONSTRAINT [FK_Game_Team_Home];


GO
PRINT N'Dropping [dbo].[FK_Game_Team_Away]...';


GO
ALTER TABLE [dbo].[Game] DROP CONSTRAINT [FK_Game_Team_Away];


GO
PRINT N'Dropping [dbo].[FK_PlayerGame_Game]...';


GO
ALTER TABLE [dbo].[PlayerGame] DROP CONSTRAINT [FK_PlayerGame_Game];


GO
PRINT N'Dropping [dbo].[FK_Player_Team]...';


GO
ALTER TABLE [dbo].[Player] DROP CONSTRAINT [FK_Player_Team];


GO
PRINT N'Dropping [dbo].[FK_PlayerGame_Player]...';


GO
ALTER TABLE [dbo].[PlayerGame] DROP CONSTRAINT [FK_PlayerGame_Player];


GO
PRINT N'Starting rebuilding table [dbo].[Game]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Game] (
    [Id]            INT  IDENTITY (1, 1) NOT NULL,
    [HomeTeamId]    INT  NOT NULL,
    [AwayTeamId]    INT  NOT NULL,
    [Date]          DATE NOT NULL,
    [HomeTeamScore] INT  NULL,
    [AwayTeamScore] INT  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Game])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Game] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Game] ([Id], [HomeTeamId], [AwayTeamId], [Date], [HomeTeamScore], [AwayTeamScore])
        SELECT   [Id],
                 [HomeTeamId],
                 [AwayTeamId],
                 [Date],
                 [HomeTeamScore],
                 [AwayTeamScore]
        FROM     [dbo].[Game]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Game] OFF;
    END

DROP TABLE [dbo].[Game];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Game]', N'Game';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[MergeSummary]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_MergeSummary] (
    [Id]             INT      IDENTITY (1, 1) NOT NULL,
    [StartTime]      DATETIME NOT NULL,
    [EndTime]        DATETIME NOT NULL,
    [NewPlayerCount] INT      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[MergeSummary])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MergeSummary] ON;
        INSERT INTO [dbo].[tmp_ms_xx_MergeSummary] ([Id], [StartTime], [EndTime], [NewPlayerCount])
        SELECT   [Id],
                 [StartTime],
                 [EndTime],
                 [NewPlayerCount]
        FROM     [dbo].[MergeSummary]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MergeSummary] OFF;
    END

DROP TABLE [dbo].[MergeSummary];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_MergeSummary]', N'MergeSummary';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Player]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Player] (
    [Id]       INT          IDENTITY (1, 1) NOT NULL,
    [Name]     VARCHAR (50) NOT NULL,
    [TeamId]   INT          NOT NULL,
    [Year]     INT          NOT NULL,
    [Position] VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Player])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Player] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Player] ([Id], [Name], [TeamId], [Year], [Position])
        SELECT   [Id],
                 [Name],
                 [TeamId],
                 [Year],
                 [Position]
        FROM     [dbo].[Player]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Player] OFF;
    END

DROP TABLE [dbo].[Player];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Player]', N'Player';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PlayerGame]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PlayerGame] (
    [Id]       INT IDENTITY (1, 1) NOT NULL,
    [PlayerId] INT NOT NULL,
    [GameId]   INT NOT NULL,
    [Goals]    INT NULL,
    [Assists]  INT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PlayerGame])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PlayerGame] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PlayerGame] ([Id], [PlayerId], [GameId], [Goals], [Assists])
        SELECT   [Id],
                 [PlayerId],
                 [GameId],
                 [Goals],
                 [Assists]
        FROM     [dbo].[PlayerGame]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PlayerGame] OFF;
    END

DROP TABLE [dbo].[PlayerGame];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PlayerGame]', N'PlayerGame';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_Game_Team_Home]...';


GO
ALTER TABLE [dbo].[Game] WITH NOCHECK
    ADD CONSTRAINT [FK_Game_Team_Home] FOREIGN KEY ([HomeTeamId]) REFERENCES [dbo].[Team] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Game_Team_Away]...';


GO
ALTER TABLE [dbo].[Game] WITH NOCHECK
    ADD CONSTRAINT [FK_Game_Team_Away] FOREIGN KEY ([AwayTeamId]) REFERENCES [dbo].[Team] ([Id]);


GO
PRINT N'Creating [dbo].[FK_PlayerGame_Game]...';


GO
ALTER TABLE [dbo].[PlayerGame] WITH NOCHECK
    ADD CONSTRAINT [FK_PlayerGame_Game] FOREIGN KEY ([GameId]) REFERENCES [dbo].[Game] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Player_Team]...';


GO
ALTER TABLE [dbo].[Player] WITH NOCHECK
    ADD CONSTRAINT [FK_Player_Team] FOREIGN KEY ([TeamId]) REFERENCES [dbo].[Team] ([Id]);


GO
PRINT N'Creating [dbo].[FK_PlayerGame_Player]...';


GO
ALTER TABLE [dbo].[PlayerGame] WITH NOCHECK
    ADD CONSTRAINT [FK_PlayerGame_Player] FOREIGN KEY ([PlayerId]) REFERENCES [dbo].[Player] ([Id]);


GO
PRINT N'Refreshing [dbo].[Matches]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Matches]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Game] WITH CHECK CHECK CONSTRAINT [FK_Game_Team_Home];

ALTER TABLE [dbo].[Game] WITH CHECK CHECK CONSTRAINT [FK_Game_Team_Away];

ALTER TABLE [dbo].[PlayerGame] WITH CHECK CHECK CONSTRAINT [FK_PlayerGame_Game];

ALTER TABLE [dbo].[Player] WITH CHECK CHECK CONSTRAINT [FK_Player_Team];

ALTER TABLE [dbo].[PlayerGame] WITH CHECK CHECK CONSTRAINT [FK_PlayerGame_Player];


GO
PRINT N'Update complete.';


GO
